/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ResumeTypeRouteImport } from './routes/$resumeType'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ResumeTypeResumeRouteImport } from './routes/$resumeType.resume'
import { Route as ResumeTypeCoverLetterRouteImport } from './routes/$resumeType.cover-letter'

const ResumeTypeRoute = ResumeTypeRouteImport.update({
  id: '/$resumeType',
  path: '/$resumeType',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ResumeTypeResumeRoute = ResumeTypeResumeRouteImport.update({
  id: '/resume',
  path: '/resume',
  getParentRoute: () => ResumeTypeRoute,
} as any)
const ResumeTypeCoverLetterRoute = ResumeTypeCoverLetterRouteImport.update({
  id: '/cover-letter',
  path: '/cover-letter',
  getParentRoute: () => ResumeTypeRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$resumeType': typeof ResumeTypeRouteWithChildren
  '/$resumeType/cover-letter': typeof ResumeTypeCoverLetterRoute
  '/$resumeType/resume': typeof ResumeTypeResumeRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$resumeType': typeof ResumeTypeRouteWithChildren
  '/$resumeType/cover-letter': typeof ResumeTypeCoverLetterRoute
  '/$resumeType/resume': typeof ResumeTypeResumeRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$resumeType': typeof ResumeTypeRouteWithChildren
  '/$resumeType/cover-letter': typeof ResumeTypeCoverLetterRoute
  '/$resumeType/resume': typeof ResumeTypeResumeRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$resumeType'
    | '/$resumeType/cover-letter'
    | '/$resumeType/resume'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$resumeType' | '/$resumeType/cover-letter' | '/$resumeType/resume'
  id:
    | '__root__'
    | '/'
    | '/$resumeType'
    | '/$resumeType/cover-letter'
    | '/$resumeType/resume'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ResumeTypeRoute: typeof ResumeTypeRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$resumeType': {
      id: '/$resumeType'
      path: '/$resumeType'
      fullPath: '/$resumeType'
      preLoaderRoute: typeof ResumeTypeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$resumeType/resume': {
      id: '/$resumeType/resume'
      path: '/resume'
      fullPath: '/$resumeType/resume'
      preLoaderRoute: typeof ResumeTypeResumeRouteImport
      parentRoute: typeof ResumeTypeRoute
    }
    '/$resumeType/cover-letter': {
      id: '/$resumeType/cover-letter'
      path: '/cover-letter'
      fullPath: '/$resumeType/cover-letter'
      preLoaderRoute: typeof ResumeTypeCoverLetterRouteImport
      parentRoute: typeof ResumeTypeRoute
    }
  }
}

interface ResumeTypeRouteChildren {
  ResumeTypeCoverLetterRoute: typeof ResumeTypeCoverLetterRoute
  ResumeTypeResumeRoute: typeof ResumeTypeResumeRoute
}

const ResumeTypeRouteChildren: ResumeTypeRouteChildren = {
  ResumeTypeCoverLetterRoute: ResumeTypeCoverLetterRoute,
  ResumeTypeResumeRoute: ResumeTypeResumeRoute,
}

const ResumeTypeRouteWithChildren = ResumeTypeRoute._addFileChildren(
  ResumeTypeRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ResumeTypeRoute: ResumeTypeRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
